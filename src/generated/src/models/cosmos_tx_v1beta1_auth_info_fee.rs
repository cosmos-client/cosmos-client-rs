/*
 * Cosmos SDK - Legacy REST and gRPC Gateway docs
 *
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CosmosTxV1beta1AuthInfoFee : Fee is the fee and gas limit for the transaction. The first signer is the primary signer and the one which pays the fee. The fee can be calculated based on the cost of evaluating the body and doing signature verification of the signers. This can be estimated via simulation.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosTxV1beta1AuthInfoFee {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<Vec<crate::models::InlineResponse20027Balances>>,
    #[serde(rename = "gas_limit", skip_serializing_if = "Option::is_none")]
    pub gas_limit: Option<String>,
    /// if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees. the payer must be a tx signer (and thus have signed this field in AuthInfo). setting this field does *not* change the ordering of required signers for the transaction.
    #[serde(rename = "payer", skip_serializing_if = "Option::is_none")]
    pub payer: Option<String>,
    #[serde(rename = "granter", skip_serializing_if = "Option::is_none")]
    pub granter: Option<String>,
}

impl CosmosTxV1beta1AuthInfoFee {
    /// Fee is the fee and gas limit for the transaction. The first signer is the primary signer and the one which pays the fee. The fee can be calculated based on the cost of evaluating the body and doing signature verification of the signers. This can be estimated via simulation.
    pub fn new() -> CosmosTxV1beta1AuthInfoFee {
        CosmosTxV1beta1AuthInfoFee {
            amount: None,
            gas_limit: None,
            payer: None,
            granter: None,
        }
    }
}


