/*
 * Cosmos SDK - Legacy REST and gRPC Gateway docs
 *
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeliverTxResult {
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<i32>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<String>,
    #[serde(rename = "gas_used", skip_serializing_if = "Option::is_none")]
    pub gas_used: Option<i32>,
    #[serde(rename = "gas_wanted", skip_serializing_if = "Option::is_none")]
    pub gas_wanted: Option<i32>,
    #[serde(rename = "info", skip_serializing_if = "Option::is_none")]
    pub info: Option<String>,
    #[serde(rename = "log", skip_serializing_if = "Option::is_none")]
    pub log: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::InlineResponse2004ResultTags>>,
}

impl DeliverTxResult {
    pub fn new() -> DeliverTxResult {
        DeliverTxResult {
            code: None,
            data: None,
            gas_used: None,
            gas_wanted: None,
            info: None,
            log: None,
            tags: None,
        }
    }
}


