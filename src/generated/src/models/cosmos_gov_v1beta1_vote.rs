/*
 * Cosmos SDK - Legacy REST and gRPC Gateway docs
 *
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CosmosGovV1beta1Vote : Vote defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosGovV1beta1Vote {
    #[serde(rename = "proposal_id", skip_serializing_if = "Option::is_none")]
    pub proposal_id: Option<String>,
    #[serde(rename = "voter", skip_serializing_if = "Option::is_none")]
    pub voter: Option<String>,
    /// VoteOption enumerates the valid vote options for a given governance proposal.   - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.  - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.  - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.  - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.  - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    #[serde(rename = "option", skip_serializing_if = "Option::is_none")]
    pub option: Option<Option>,
}

impl CosmosGovV1beta1Vote {
    /// Vote defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option.
    pub fn new() -> CosmosGovV1beta1Vote {
        CosmosGovV1beta1Vote {
            proposal_id: None,
            voter: None,
            option: None,
        }
    }
}

/// VoteOption enumerates the valid vote options for a given governance proposal.   - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.  - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.  - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.  - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.  - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Option {
    #[serde(rename = "VOTE_OPTION_UNSPECIFIED")]
    UNSPECIFIED,
    #[serde(rename = "VOTE_OPTION_YES")]
    YES,
    #[serde(rename = "VOTE_OPTION_ABSTAIN")]
    ABSTAIN,
    #[serde(rename = "VOTE_OPTION_NO")]
    NO,
    #[serde(rename = "VOTE_OPTION_NO_WITH_VETO")]
    NOWITHVETO,
}

